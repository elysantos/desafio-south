version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    networks:
      - net-desafio
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    networks:
      - net-desafio
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  pgsql-dev:
    image: postgres
    volumes:
      - $PWD/.infra/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: south
    ports:
      - 5432:5432
    networks:
      - net-desafio
  mock-user-info:
    image: mock-user-info
    ports:
      - 8099:8080
    networks:
      - net-desafio
  desafio-south:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: desafio_south_1
    image: desafio-south-image
    networks:
      - net-desafio
    depends_on:
      - pgsql-dev
      - kafka
      - mock-user-info
    ports:
      - 8080:9898
  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    networks:
      - net-desafio
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic assembleias-resultados --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

networks:
  net-desafio: {}